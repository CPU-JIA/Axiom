version: '3.8'

services:
  # CI/CD服务
  cicd-service:
    build: .
    ports:
      - "8005:8005"
    environment:
      # 数据库配置
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password123
      DB_NAME: euclid_elements
      DB_SSL_MODE: disable
      
      # JWT配置
      JWT_SECRET: "cicd-service-jwt-secret-key-development"
      JWT_ACCESS_TOKEN_EXPIRY: 3600
      
      # Kubernetes配置（本地开发不启用）
      K8S_IN_CLUSTER: "false"
      K8S_CONFIG_PATH: ""
      K8S_NAMESPACE: "cicd"
      
      # Tekton配置
      TEKTON_NAMESPACE: "tekton-pipelines" 
      TEKTON_DEFAULT_TIMEOUT: 3600
      TEKTON_MAX_CONCURRENT_RUNS: 5
      
      # 存储配置
      STORAGE_TYPE: "local"
      STORAGE_LOCAL_PATH: "/data/cicd"
      
      # 缓存配置
      CACHE_TYPE: "local"
      CACHE_LOCAL_PATH: "/data/cache"
      CACHE_MAX_SIZE_GB: 5
      CACHE_TTL_HOURS: 168
      
      # 应用配置
      ENVIRONMENT: "development"
      PORT: "8005"
      LOG_LEVEL: "debug"
    volumes:
      - cicd_storage:/data/cicd
      - cache_storage:/data/cache
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cicd_network

  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: euclid_elements
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cicd_network

  # Redis缓存（可选）
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - cicd_network

volumes:
  postgres_data:
  redis_data:
  cicd_storage:
  cache_storage:

networks:
  cicd_network:
    driver: bridge